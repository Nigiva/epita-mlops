version: "3.8"
services:
  ######################
  ## Discord Producer ##
  ######################
  discord_producer:
    container_name: discord_producer
    build:
      context: ./discord-producer
      dockerfile: Dockerfile
    depends_on:
      - init_kafka_topics
    environment:
      LOG_PATH: log/discord-producer.log
      KAFKA_BROKER: "kafka:9093"
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      KAFKA_TOPIC: discordmessage
      DEBUG_MODE: "True"
      WAIT_FOR_KAFKA: 20
    volumes:
      - ./log:/app/log

  ###########
  ## Model ##
  ###########
  # Model Instance N°1
  model_1:
    container_name: model_1
    build:
      context: ./model
      dockerfile: Dockerfile
    depends_on:
      - init_kafka_topics
      - discord_producer
    environment:
      LOG_PATH: log/model-1.log
      KAFKA_BROKER: "kafka:9093"
      MESSAGE_KAFKA_TOPIC: discordmessage
      PREDICTION_KAFKA_TOPIC: modelprediction
      WAIT_FOR_KAFKA: 20
    volumes:
      - ./log:/app/log

  # Model Instance N°2
  model_2:
    container_name: model_2
    build:
      context: ./model
      dockerfile: Dockerfile
    depends_on:
      - init_kafka_topics
      - discord_producer
    environment:
      LOG_PATH: log/model-2.log
      KAFKA_BROKER: "kafka:9093"
      MESSAGE_KAFKA_TOPIC: discordmessage
      PREDICTION_KAFKA_TOPIC: modelprediction
      WAIT_FOR_KAFKA: 20
    volumes:
      - ./log:/app/log
  
  #########################
  ## Prediction Consumer ##
  #########################
  prediction_consumer:
    container_name: prediction_consumer
    build:
      context: ./prediction-consumer
      dockerfile: Dockerfile
    depends_on:
      - init_kafka_topics
      - model_1
      - model_2
    environment:
      LOG_PATH: log/prediction-consumer.log
      KAFKA_BROKER: "kafka:9093"
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      KAFKA_TOPIC: modelprediction
      DEBUG_MODE: "True"
      WAIT_FOR_KAFKA: 20
    volumes:
      - ./log:/app/log

  ####################
  ## Drift Detector ##
  ####################
  drift_detector:
    container_name: drift_detector
    build:
      context: ./drift-detector
      dockerfile: Dockerfile
    depends_on:
      - init_kafka_topics
      - prediction_consumer
    environment:
      LOG_PATH: log/drift-dectector.log
      KAFKA_BROKER: "kafka:9093"
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      KAFKA_TOPIC: modelprediction
      PREDICTION_BUFFER_SIZE: 10
      AUC_BUFFER_SIZE: 50
      MINUTES_BETWEEN_ITERATIONS: 1
      MONITORING_CHANNEL_ID: 1051849968148815902
      WAIT_FOR_KAFKA: 20
    volumes:
      - ./log:/app/log

  ###############
  ## Zookeeper ##
  ###############
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ###########
  ## Kafka ##
  ###########
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    expose:
      - "9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init_kafka_topics:
    container_name: init_kafka_topics
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      echo 'Waiting for Kafka to be ready...';
      kafka-topics --bootstrap-server kafka:9093 --list

      echo -e 'Creating kafka topics';
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic discordmessage --partitions 2 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic modelprediction --partitions 1 --replication-factor 1

      echo 'Kafka is ready !';
      kafka-topics --bootstrap-server kafka:9093 --list
      "

  ###################
  ## Monitor Kafka ##
  ###################
  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9093"
    depends_on:
      - kafka
